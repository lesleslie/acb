[tool.ruff]
line-length = 88
target-version = "py313"
fix = true
show-fixes = true
output-format = "full"
unsafe-fixes = true

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
ignore = [
    "F821",
    "D100",
    "D101",
    "D102",
    "D103",
    "D104",
    "D105",
    "D106",
    "D107",
]
extend-select = [
    "I",
    "C901",
    "D",
]

[tool.ruff.lint.isort]
no-lines-before = [
    "first-party",
]

[tool.ruff.lint.mccabe]
max-complexity = 12

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.black]
target-version = [
    "py313",
]

[tool.creosote]
paths = [
    "acb",
]
deps-file = "pyproject.toml"
exclude-deps = [
    "pytest-asyncio",
    "pre-commit",
    "pytest-mock",
    "pyfiglet",
    "google-crc32c",
    "pytest",
    "pdm",
    "tomli-w",
    "pdm-bump",
    "autotyping",
    "pyyaml",
    "uv",
    "pytest-cov",
    "msgspec-python313-pre",
]

[tool.refurb]
enable_all = true

[tool.bandit]
target = [
    "acb",
]
skips = [
    "B403",
    "B311",
    "B607",
    "B603",
    "B704",
    "B602",
    "B101",
    "B404",
    "B301",
]

[tool.pyright]
verboseOutput = true
include = [
    "acb",
]
exclude = [
    "scratch",
]
extraPaths = [
    ".venv/lib/python3.13/site-packages/",
]
typeCheckingMode = "strict"
reportMissingTypeStubs = false
reportOptionalMemberAccess = false
reportOptionalCall = false
reportUnknownMemberType = false
reportUnknownVariableType = false
reportUnknownArgumentType = false
reportInvalidTypeForm = false
reportUnknownLambdaType = false
reportUnknownParameterType = "warning"
reportPrivateUsage = false
pythonVersion = "3.13"
pythonPlatform = "Darwin"

[tool.codespell]
skip = "*/data/*"
quiet-level = 3
ignore-words-list = "crate,uptodate"

[tool.vulture]
min_confidence = 86
paths = [
    "acb",
]
ignore_names = [
    "cls",
]

[tool.coverage.run]
branch = true
source = [
    "acb",
]
omit = [
    "*/tests/*",
    "*/site-packages/*",
    "*/__pycache__/*",
    "*/__init__.py",
]

[tool.coverage.report]
exclude_also = [
    "pragma: no cover",
    "def __repr__",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
    "except ImportError",
    "def __str__",
    "@abstractmethod",
]
ignore_errors = false

[tool.pytest.ini_options]
addopts = "--cov=acb"
asyncio_default_fixture_loop_scope = "function"
python_files = [
    "test_*.py",
    "*_test.py",
]
python_classes = "Test*"
python_functions = "test_*"
asyncio_mode = "auto"

[project]
name = "acb"
version = "0.11.0"
description = "Default template for PDM package"
dependencies = [
    "itsdangerous>=2.2.0",
    "arrow>=1.3.0",
    "dill>=0.3.9",
    "blake3>=1.0.4",
    "loguru>=0.7.3",
    "nest-asyncio>=1.6.0",
    "pydantic-settings>=2.8.1",
    "bevy>=2.0.2",
    "icecream>=2.1.4",
    "brotli>=1.1.0",
    "pyfiglet>=1.0.2",
    "inflection>=0.5.1",
    "aiopath>=0.7.7",
    "pyyaml>=6.0.2",
    "google-crc32c>=1.7.0",
    "pydantic[email]>=2.10.6",
    "devtools>=0.12.2",
    "typer>=0.15.2",
    "tomli-w>=1.2.0",
    "msgspec>=0.19.0",
    "aioconsole>=0.8.1",
]
requires-python = ">=3.13"
readme = "README.md"
authors = [
    { name = "lesleslie", email = "les@wedgwoodwebworks.com" },
]
classifiers = [
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.13",
    "Framework :: Pydantic",
    "Framework :: Pydantic :: 2",
    "Framework :: AsyncIO",
    "Typing :: Typed",
    "License :: OSI Approved :: BSD License",
    "Development Status :: 3 - Alpha",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

[project.license]
text = "BSD-3-CLAUSE"

[project.urls]
Homepage = "https://github.com/lesleslie/acb"
Documentation = "https://github.com/lesleslie/acb"
Repository = "https://github.com/lesleslie/acb"

[project.optional-dependencies]
cache = [
    "coredis>=4.20.0",
    "aiocache[redis]>=0.12.3",
    "logfire[redis]>=3.9.0",
]
storage = [
    "gcsfs>=2025.3.0",
    "s3fs>=2025.3.0",
    "adlfs>=2024.12.0",
]
dns = [
    "google-cloud-dns>=0.35.0",
    "validators>=0.34.0",
]
requests = [
    "httpx[http2]>=0.28.1",
    "hishel>=0.1.1",
    "sentry-sdk[httpx]>=2.23.1",
    "logfire[httpx]>=3.9.0",
]
smtp = [
    "mailgun>=0.1.1",
]
sql = [
    "sqlalchemy>=2.0.39",
    "sqlalchemy-utils>=0.41.2",
    "sqlmodel>=0.0.24",
    "babel>=2.17.0",
    "pymysql>=1.1.1",
    "aiomysql>=0.2.0",
    "logfire[sqlalchemy]>=3.9.0",
    "sentry-sdk[sqlalchemy]>=2.23.1",
    "greenlet>=3.1.1",
]
nosql = [
    "google-cloud-firestore>=2.20.1",
    "motor>=3.7.0",
]
demo = [
    "faker>=37.0.0",
]
ftpd = [
    "aioftp>=0.24.1",
    "asyncssh>=2.20.0",
]
secret = [
    "google-cloud-secret-manager>=2.23.2",
]
monitoring = [
    "sentry-sdk[loguru]>=2.23.1",
    "logfire[system-metrics]>=3.9.0",
]
dev = [
    "crackerjack>=0.14.4",
]

[build-system]
requires = [
    "pdm-backend",
]
build-backend = "pdm.backend"
